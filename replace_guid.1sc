//------------------------------------------------
//--- 010 Editor v15.0.1 Script File
//
//      File: replace_guid.1sc
//   Authors: Jack Humbert
//   Version: 
//   Purpose: Replace all instances of a GUID with a new one
//  Category: 
//   History: 
//------------------------------------------------

local struct {
    GUID guid;
} guids[15];

RunTemplate("controls.cfg.bt");

int guids_size = 0;

int i = 0;
int j = 0;
int found = 0;
for (i = 0; i < control_size; i++) {
    if (exists(control[i].guid)) {
        found = 0;
        for (j = 0; j < 15; j++) {
            if (guids[j].guid == control[i].guid) {
                found = 1;    
                break;
            }
        }    
        if (!found) {
            if (guids_size >= 15) {
                MessageBox(idOk, "Too many GUIDs", "Jack didn't think there would be this many GUIDs in a file - please let him know he was wrong and he will fix it.");
                return;
            }
            guids[guids_size].guid = control[i].guid;
            guids_size++;
        }
    }    
}

string GUIDToStringOrEmpty(GUID guid) {
    if (guid[0] != 0) {
        return GUIDToString(guid);
    } else {
        return "";
    }
}

int guid_index = InputRadioButtonBox("Choose old GUID", "Select a GUID to replace", -1, 
    GUIDToStringOrEmpty(guids[0].guid), 
    GUIDToStringOrEmpty(guids[1].guid), 
    GUIDToStringOrEmpty(guids[2].guid), 
    GUIDToStringOrEmpty(guids[3].guid), 
    GUIDToStringOrEmpty(guids[4].guid), 
    GUIDToStringOrEmpty(guids[5].guid), 
    GUIDToStringOrEmpty(guids[6].guid), 
    GUIDToStringOrEmpty(guids[7].guid), 
    GUIDToStringOrEmpty(guids[8].guid), 
    GUIDToStringOrEmpty(guids[9].guid), 
    GUIDToStringOrEmpty(guids[10].guid), 
    GUIDToStringOrEmpty(guids[11].guid), 
    GUIDToStringOrEmpty(guids[12].guid), 
    GUIDToStringOrEmpty(guids[13].guid), 
    GUIDToStringOrEmpty(guids[14].guid)
);

if (guid_index == -1) {
    MessageBox(idOk, "Cancelled", "Replacement has been cancelled by not selecting a GUID");
    return;    
}

string input_string = InputString(Str("Replacing %s", GUIDToString(guids[guid_index].guid)), "New GUID", GUIDToString(guids[guid_index].guid));

if (input_string == "") {
    MessageBox(idOk, "Cancelled", "Replacement has been cancelled by not entering a new GUID");
    return;  
}

GUID new_guid;
int result = StringToGUID(input_string, new_guid);

if (result < 0) {
    MessageBox(idOk, "Error", "The value entered could not be converted into a GUID");
    return;    
}

if (guid_index != -1) {
    for (i = 0; i < control_size; i++) {
        if (exists(control[i].guid)) {
            if (control[i].guid == guids[guid_index].guid) {
                control[i].guid = new_guid;
                Printf("%s (address 0x%X) updated\n", control[i].name, startof(control[i].guid));
            }
        }
    }
    MessageBox(idOk, "Success", "GUIDs have been replaced. Please save the file.");
}